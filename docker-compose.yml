services:
  # PHP Application Service
  app:
    build:
      context: ./mini-crm-backend
      dockerfile: Dockerfile
    container_name: crm-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./mini-crm-backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crm-network

  # Nginx Web Server Service untuk Backend
  nginx:
    image: nginx:1.25-alpine
    container_name: crm-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./mini-crm-backend:/var/www/html
      - ./mini-crm-backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - crm-network

  # MySQL Database Service
  db:
    image: mysql:8.0
    platform: linux/amd64
    container_name: crm-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: crm_laravel
      MYSQL_USER: crm_user
      MYSQL_PASSWORD: crm_password
      MYSQL_ROOT_PASSWORD: crm_root_password
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  # Vue.js Frontend Service
  frontend:
    build:
      context: ./mini-crm-frontend
      dockerfile: Dockerfile
    container_name: crm-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - nginx
    networks:
      - crm-network

networks:
  crm-network:
    driver: bridge

volumes:
  db-data:
    driver: local